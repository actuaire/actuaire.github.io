<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Actuaire</title>
    <description>Usage de R en actuariat</description>
    <link>http://actuaire.github.io/</link>
    <atom:link href="http://actuaire.github.io/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>Table de maintien en incapacité</title>
        <description>&lt;h1 id=&quot;lxt&quot;&gt;lxt&lt;/h1&gt;

&lt;p&gt;Le data frame de lxt est récupéré à la sortie de la fonction KapMei_2(). Il est également sauvegardé dans &lt;em&gt;Processed/Data/taux1_hor.RData&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Il est de format suivant &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;lx_acc&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  t        &lt;span class=&quot;m&quot;&gt;18&lt;/span&gt;        &lt;span class=&quot;m&quot;&gt;35&lt;/span&gt;        &lt;span class=&quot;m&quot;&gt;40&lt;/span&gt;        &lt;span class=&quot;m&quot;&gt;45&lt;/span&gt;        &lt;span class=&quot;m&quot;&gt;50&lt;/span&gt;        &lt;span class=&quot;m&quot;&gt;55&lt;/span&gt;
&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10000.000&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10000.000&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10000.000&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10000.000&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10000.000&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10000.000&lt;/span&gt;
&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10000.000&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;9993.987&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;9983.962&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10000.000&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10000.000&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;9982.100&lt;/span&gt;
&lt;span class=&quot;m&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;9972.863&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;9987.974&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;9971.933&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;9985.668&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;9995.826&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;9964.200&lt;/span&gt;
&lt;span class=&quot;m&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;9966.079&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;9981.960&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;9955.881&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;9967.753&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;9987.479&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;9934.332&lt;/span&gt;
&lt;span class=&quot;m&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;9938.942&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;9957.907&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;9951.868&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;9957.001&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;9974.958&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;9922.384&lt;/span&gt;
&lt;span class=&quot;m&quot;&gt;6&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;9925.373&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;9927.823&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;9943.839&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;9946.244&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;9949.917&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;9886.520&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&quot;drt&quot;&gt;DRT&lt;/h1&gt;

&lt;p&gt;Calculer la DRT(x,t) à partir des l_xt&lt;/p&gt;

&lt;p&gt;On écrit la fonction générique &lt;em&gt;rolling_sum()&lt;/em&gt; pour calculer la somme glissante d’un vecteur &lt;em&gt;vec_in&lt;/em&gt; de &lt;em&gt;sf&lt;/em&gt; pas (sf pour steps forward) &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;rolling_sum &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; vec_in &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; sf &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
   vec &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;vec_in&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;rep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;sf&lt;span class=&quot;m&quot;&gt;-1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
   vec_out 	&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;  &lt;span class=&quot;kp&quot;&gt;rowSums&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;embed&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;vec&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;sf&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
   &lt;span class=&quot;kr&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;vec_out&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

test_vec &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;65&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
rolling_sum&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;test_vec&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;On peut en déduire la fonction &lt;em&gt;drt_vec()&lt;/em&gt; qui prend un vecteur de lt pour un âge donné et donne à la sortie un vecteur drt.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;drt_vec &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;lxt_vec&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; pas &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	lxt_rs &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; rolling_sum&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;lxt_vec&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; sf &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; pas &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	drt &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;ifelse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;lxt_vec &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; lxt_rs &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; lxt_vec &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;kr&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;drt&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Pour la méthode 1, i.e à l’horizon de 3 ans, la variable &lt;em&gt;pas = 1095&lt;/em&gt; 
Pour la méthode 2, i.e à l’horizon de 3 ans, la variable &lt;em&gt;pas = 365&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;Finalement, en utilisant &lt;em&gt;lapply()&lt;/em&gt;, on peut transformer un dataframe lxt en drt.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;drt3a_acc&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;data.frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;anc &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; lx_acc&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;lapply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;lx_acc&lt;span class=&quot;p&quot;&gt;[,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;-1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;col&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; drt_vec&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;col&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; pas&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1095&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
drt3a_mal&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;data.frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;anc &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; lx_mal&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;lapply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;lx_mal&lt;span class=&quot;p&quot;&gt;[,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;-1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;col&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; drt_vec&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;col&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; pas&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1095&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;

drt1a_acc&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;data.frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;anc &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; lx_acc&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;lapply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;lx_acc&lt;span class=&quot;p&quot;&gt;[,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;-1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;col&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; drt_vec&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;col&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; pas&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;365&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
drt1a_mal&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;data.frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;anc &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; lx_mal&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;lapply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;lx_mal&lt;span class=&quot;p&quot;&gt;[,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;-1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;col&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; drt_vec&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;col&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; pas&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;365&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

</description>
        <pubDate>Sat, 22 Nov 2014 00:50:18 +0100</pubDate>
        <link>http://actuaire.github.io/mod%C3%A8le/de/dur%C3%A9e/2014/11/22/construction-table-incap/</link>
        <guid isPermaLink="true">http://actuaire.github.io/mod%C3%A8le/de/dur%C3%A9e/2014/11/22/construction-table-incap/</guid>
      </item>
    
      <item>
        <title>Memo on VIM use</title>
        <description>&lt;p&gt;On my Thinkpad T410 running Linux, Vim can be called from within the Terminal or  &lt;em&gt;tmux&lt;/em&gt; .
On my office PC running Windows, I use Sublime text 3 with the plugin Vintageous that emulate Vim behaviors.&lt;/p&gt;

&lt;h1 id=&quot;vims-modes&quot;&gt;Vim’s modes&lt;/h1&gt;

&lt;p&gt;Normal mode&lt;/p&gt;

&lt;p&gt;Insert mode
Insert Normal mode : a special version of Normal mode, which gives you one bullet within Insert mode : Ctrl + o &lt;/p&gt;

&lt;p&gt;Visual mode &lt;/p&gt;

&lt;p&gt;Operator-Pending mode : mode that last during the brief interval between un operator and a motion. For example : d w&lt;/p&gt;

&lt;h2 id=&quot;often-used-keys&quot;&gt;Often-used keys&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;jj&lt;/em&gt; : behaves like ESC, to  escape from Insert mode and return to Normal mode . This is a custom command added inside &lt;em&gt;Key Binding - User&lt;/em&gt; file of ST3
* : searchs for word under cursor
» or « : to indent or reindent line&lt;/p&gt;

&lt;p&gt;Enter Insert mode :&lt;/p&gt;

&lt;p&gt;&lt;em&gt;i&lt;/em&gt; : insert cursor just before the normal-mode cursor.
&lt;em&gt;I&lt;/em&gt; : enter insert mode at the beginning of the line.
&lt;em&gt;a&lt;/em&gt; : insert cursor just after the normal-mode cursor.
&lt;em&gt;A&lt;/em&gt; : enter insert mode at the end of the actual line.
&lt;em&gt;o&lt;/em&gt;/&lt;em&gt;O&lt;/em&gt; : insert mode started at next/previous line.&lt;/p&gt;

&lt;h2 id=&quot;moving-around-in-normal-mode&quot;&gt;Moving around in Normal mode:&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Moving by character : h, j, k, l &lt;/li&gt;
  &lt;li&gt;Moving by line:
    &lt;ul&gt;
      &lt;li&gt;&lt;em&gt;0&lt;/em&gt; : to the beginning of the line&lt;/li&gt;
      &lt;li&gt;&lt;em&gt;$&lt;/em&gt; : to the end of the line.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Targetting a character : f{char}. 
Move to the next occurence : ;
Move back to previous occurence : ,
If char is (, {, or [; to go to its match : % . This feature is useful to detect missing brackets while coding.&lt;/p&gt;

&lt;p&gt;For targetting a precise word or stem, use search inside the command line : /&lt;/p&gt;

&lt;p&gt;Moving on a bigger scale than line&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Move to the beginning of the line : gg&lt;/li&gt;
  &lt;li&gt;Move to the last line : G&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Move to &lt;em&gt;n&lt;/em&gt;th line : nG&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Move to the top of the screen : H&lt;/li&gt;
  &lt;li&gt;Move to the middle of the screen : M&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Move to the bottom of the screen : L&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Put the line with the cursor at the center : z.&lt;/li&gt;
  &lt;li&gt;Put the line with the cursor at the top : zt&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Puth the line with the cursor at the bottom : zb&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Move half page down : Ctrl + d&lt;/li&gt;
  &lt;li&gt;Move half page up : Ctrl + u&lt;/li&gt;
  &lt;li&gt;Move back a page : Ctrl + b&lt;/li&gt;
  &lt;li&gt;Move forward a page : Ctr + f &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;substitution-operation&quot;&gt;Substitution operation&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;To substitute new for all ‘old’s on a line type       :s/old/new/g&lt;/li&gt;
  &lt;li&gt;To substitute phrases between two line #’s type       :#,#s/old/new/g&lt;/li&gt;
  &lt;li&gt;To substitute all occurrences in the file type        :%s/old/new/g&lt;/li&gt;
  &lt;li&gt;To ask for confirmation each time add ‘c’             :%s/old/new/gc&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Example : Delete white space from the beginning of 4 line (from 61th to the 64th): :61,64s/^  / &lt;/p&gt;

&lt;h1 id=&quot;vim-features-for-writing&quot;&gt;Vim features for writing&lt;/h1&gt;

&lt;h2 id=&quot;spell-checking&quot;&gt;Spell checking&lt;/h2&gt;

&lt;p&gt;When writing, I prefer to separate the composition and spell-checking proceses intoseparate tasks. I’ll often disable the spell checker while I write to avoid being nagged each time I make a mistake. When I’m ready, I’ll make a final pass through the document with the spell checker enable, fixing each typo that it flags ( Drew Neil )&lt;/p&gt;

&lt;p&gt;Essencial Normal mode commands for operating Vim’s spell checker:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;]s : jump to next spelling error&lt;/li&gt;
  &lt;li&gt;[s : jump to previous spelling error&lt;/li&gt;
  &lt;li&gt;z= : suggest corrections for current word&lt;/li&gt;
  &lt;li&gt;zg : add current word to spell file&lt;/li&gt;
  &lt;li&gt;zw : remove current word from spell file&lt;/li&gt;
  &lt;li&gt;zug : revert zg or zw command for current word&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;vim
:set spell
:set spelllang= en, fr, de
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This functionality is provided by the plugin spellfire.vim, which ships with Vim. To make it work, you have to add these two line inside the &lt;em&gt;vimrc&lt;/em&gt; file&lt;/p&gt;

&lt;p&gt;&lt;code&gt;vim
set nocompatible
plugin on
&lt;/code&gt;&lt;/p&gt;

&lt;h1 id=&quot;vim-inside-sublime-text-3&quot;&gt;Vim inside Sublime Text 3&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;Vintageous&lt;/em&gt; is a plugin for ST3 that emulates Vim behavior inside ST3. It’s a good combo to take advantage of Vim power and ST3 features, such as cross-platform, fuzzy search.&lt;br /&gt;
The plugin introduces a new feature compare to classic Vim feature, the &lt;em&gt;Vintageous selection mode&lt;/em&gt; being able to handle ST3’s multi-selection feature.&lt;/p&gt;

&lt;p&gt;I use Vintageous since it’s more recent than Vintage. In the &lt;em&gt;Preferences.sublime-settings&lt;/em&gt; file, to activate the use of CTRL touch, insert &lt;/p&gt;

&lt;p&gt;&lt;code&gt;
	&quot;vintageous_use_ctrl_keys&quot;:false,
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;We have to remap Sublime Text’s combos with the touch CTRL involved inside the file &lt;em&gt;Default.sublime-keymap&lt;/em&gt; which could be acces my the menu bar, Preferences/Key bindings - User.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Ctrl + r&lt;/em&gt; : show the layout , is map to Alt +r&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
{ &quot;keys&quot;: [&quot;alt+r&quot;], &quot;command&quot;: &quot;show_overlay&quot;, &quot;args&quot;: {&quot;overlay&quot;: &quot;goto&quot;, &quot;text&quot;: &quot;@&quot;} }, 
&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;vintageous-select-mode&quot;&gt;Vintageous select mode&lt;/h2&gt;

&lt;p&gt;Vintageous select mode is different from Select mode in Vim. It exposes a distinctive feature of ST, multiple selection. &lt;/p&gt;

&lt;p&gt;Commands :
* gh : Enter vintageous select mode from normal or visual mode
* j : add selection
* k : remove selection
* l : skip selection
* A : select all instances
* i : Enter Visual mode ( preserving selections)
* J : Clear multiple selection and enter normal mode
* gH : After a search with \ or ?, select &lt;strong&gt;all&lt;/strong&gt; matches&lt;/p&gt;

&lt;p&gt;Notes :&lt;/p&gt;

&lt;p&gt;Select mode is unlike other modes in Vintageous.&lt;/p&gt;

&lt;p&gt;Once you’ve created visual selections in select mode, you must return to insert mode by pressing i in order to edit text. Once in insert mode, you can switch to normal mode, etc.&lt;/p&gt;

&lt;p&gt;If you press Esc while in select mode, you will return to normal mode, but multiple carets won’t be destroyed. If you press Esc a second time, you will be left with one single caret in normal mode.&lt;/p&gt;

&lt;p&gt;Actions performed in select mode cannot be repeated with .. Or perhaps they can, I’m not sure.&lt;/p&gt;

&lt;h2 id=&quot;vintageous-and-r-submits&quot;&gt;Vintageous and R submits&lt;/h2&gt;

&lt;p&gt;Without Vintageous, the most usual actions to send code to R terminal is :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Select line (nothing to do ) or several lines : Ctr + l&lt;/li&gt;
  &lt;li&gt;Submit line(s) to terminal : Ctr + Shift + l&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Active Vintageous take back the control of combinaisons Ctrl + {char}, we have to use Vim way to select lines :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Select line(s) : V&lt;/li&gt;
  &lt;li&gt;Submit selected zone as usual : Ctr + Shift + l&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Tue, 18 Nov 2014 22:45:18 +0100</pubDate>
        <link>http://actuaire.github.io/text/editpr/2014/11/18/howto-vim/</link>
        <guid isPermaLink="true">http://actuaire.github.io/text/editpr/2014/11/18/howto-vim/</guid>
      </item>
    
      <item>
        <title>My first blog</title>
        <description>&lt;p&gt;Finally, I have a blog run on Jekyll and Github. In my case, the simplest way is using pure Jekyll. Others solutions such as Octopress or Jekyllbootstrap have cost me a lot energy and time. Moreover, I felt that these latters have taken away from the UNIX’s KISS principle. What please me the most with pure Jekyll is the Spartan configurations. Everythins is about the contents, the appearance is reduced to the strict necessary.&lt;/p&gt;

&lt;p&gt;Here are steps (in my case) to lauch the [datasciencer] blog:&lt;/p&gt;

&lt;h2 id=&quot;set-up-stuffs&quot;&gt;Set-up stuffs:&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Install Git : &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;sudo pacman -S git&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Ruby using &lt;strong&gt;rbenv&lt;/strong&gt; &lt;a href=&quot;http://octopress.org/docs/setup/rbenv/&quot;&gt;How&lt;/a&gt;. Add this to your &lt;em&gt;.bashrc&lt;/em&gt; file&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt;
git clone git://github.com/sstephenson/rbenv.git .rbenv
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;export PATH=&amp;quot;$HOME/.rbenv/bin:$PATH&amp;quot;&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; ~/.bashrc
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;eval &amp;quot;$(rbenv init -)&amp;quot;&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; ~/.bashrc
git clone git://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Pre-install nodejs to have a javascript instant :&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;sudo pacman -S nodejs&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Create within my Github account the repository &lt;em&gt;datasciencer.github.io&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Install openssh&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Generate and add the public ssh key to this repository inside Settings/Deploy key. The key is show by enter this command line inside the terminal : cat .ssh/id_rsa.pub&lt;/li&gt;
  &lt;li&gt;Install &lt;strong&gt;jekyll&lt;/strong&gt; through Ruby’s &lt;strong&gt;gem&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;gem install jekyll&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;write-the-first-blog&quot;&gt;Write the first blog&lt;/h2&gt;

&lt;p&gt;Let’s start now by creating the jekyll blog : &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;jekyll new datasciencer.github.io&lt;/li&gt;
  &lt;li&gt;cd datasciencer.github.io&lt;/li&gt;
  &lt;li&gt;git remote set-url origin git@github.com:datasciencer/datasciencer.githu.io.git&lt;/li&gt;
  &lt;li&gt;git add .&lt;/li&gt;
  &lt;li&gt;git commit -m “first commit”&lt;/li&gt;
  &lt;li&gt;git pull&lt;/li&gt;
  &lt;li&gt;git push origin master&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let’s check if jekyll could highlight R code&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;packages_vec &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;\&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;reshape2&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;ggplot2&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;XLConnect&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;dplyr&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kp&quot;&gt;lapply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;packages_vec&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; character.only&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;In case that you have multi-github-accounts and want to set ssh certificates,  follow &lt;a href=&quot;http://code.tutsplus.com/tutorials/quick-tip-how-to-work-with-github-and-multiple-accounts--net-22574&quot;&gt;this link&lt;/a&gt; : &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Generate a key for each repository of different github accounts&lt;/li&gt;
  &lt;li&gt;Create a config file inside .ssh/ for ghaccount-1 and ghaccount-2&lt;/li&gt;
  &lt;li&gt;Inside each origin folder, for example github account-1, enter this command into the terminal : git remote set-url origin git@ghaccount-1:nameaccount1/nameaccount1.github.io.git&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;ajustement-for-pixyll-theme&quot;&gt;Ajustement for Pixyll theme&lt;/h2&gt;

&lt;p&gt;To change headers’ font size, go to _sass/_main.scss&lt;/p&gt;

&lt;p&gt;Modify font size for headers h1, h2, h3 … inside three blocks &lt;em&gt;@media screen&lt;/em&gt; : min-width : 48em, max-width : 48em, min-width : 64e&lt;/p&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://github.com/jekyll/jekyll-help&quot;&gt;Jekyll’s dedicated Help repository&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;[datasciencer] : http://datasciencer.github.io/&lt;/p&gt;
</description>
        <pubDate>Sun, 19 Oct 2014 20:20:11 +0200</pubDate>
        <link>http://actuaire.github.io/blog/2014/10/19/my-first-blog/</link>
        <guid isPermaLink="true">http://actuaire.github.io/blog/2014/10/19/my-first-blog/</guid>
      </item>
    
  </channel>
</rss>
